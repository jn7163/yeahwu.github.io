<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NexT的一些小修小改</title>
      <link href="/posts/7109dccd.html"/>
      <url>/posts/7109dccd.html</url>
      
        <content type="html"><![CDATA[<h3 id="添加博客置顶"><a href="#添加博客置顶" class="headerlink" title="添加博客置顶"></a>添加博客置顶</h3><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><h5 id="添加置顶开关"><a href="#添加置顶开关" class="headerlink" title="添加置顶开关"></a>添加置顶开关</h5><p>找到 <u>/blog/scaffolds/post.md</u> 添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">top: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><a id="more"></a><p>然后每次新建博客 <code>hexo new&quot;postname&quot;</code> 会显示页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: </span><br><span class="line">top: false</span><br><span class="line">date: </span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>top: false 改成 true 就开启了文章置顶</p><h5 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h5><p>打开 <u>/themes/next/layout/_macro</u> 目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">    &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;font color=green&gt;置顶&lt;/font&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>就能在博客页头看到“置顶”标记了。</p><h3 id="修改链接的默认格式"><a href="#修改链接的默认格式" class="headerlink" title="修改链接的默认格式"></a>修改链接的默认格式</h3><p>Hexo的永久链接的默认格式是  <u>:year/:month/:day/:title/</u> 比如访问站点下某一篇文章时，其路径是  <u>2018/04/12/xxxx/</u> 如果我们的文章标题是中文的，那么该路径就会出现中文字符。在路径中出现了中文字符很容易引发各种问题。</p><h5 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h5><p>在站点根目录执行命令：</p><p><code>$ npm install hexo-abbrlink --save</code></p><h5 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h5><p>打开根目录下的 <u>_config.yml</u> 文件，修改如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># permalink: :year/:month/:day/:title/</span><br><span class="line"># permalink_defaults:</span><br><span class="line">permalink: posts/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32</span><br><span class="line">  rep: hex    # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure><p>这里将页面都添加了 .html 的后缀，用来伪装成静态页面(虽说Hexo的页面本身就是静态页面)，这样可以直接从路径就知道这是个静态页面，方便seo。</p><p>接下来重新部署，可以看到文章路径变成了 <u>/posts/xxxxx.html</u> 就算我们将文字标题命名为中文也没问题了。</p><h3 id="添加分享"><a href="#添加分享" class="headerlink" title="添加分享"></a>添加分享</h3><h5 id="安装share插件"><a href="#安装share插件" class="headerlink" title="安装share插件"></a>安装share插件</h5><p><code>$ npm install --save theme-next/hexo-next-share#last-release</code></p><h5 id="添加Need-More-Share-Likely-Share-js"><a href="#添加Need-More-Share-Likely-Share-js" class="headerlink" title="添加Need More Share, Likely, Share.js"></a>添加Need More Share, Likely, Share.js</h5><p>以下任选一种在 <u>themes/_config.yml</u> 里添加即可:</p><p>Need More Share</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># NeedMoreShare2</span><br><span class="line"># Dependencies: https://github.com/theme-next/theme-next-needmoreshare2</span><br><span class="line"># For more information: https://github.com/revir/need-more-share2</span><br><span class="line"># iconStyle: default | box</span><br><span class="line"># boxForm: horizontal | vertical</span><br><span class="line"># position: top / middle / bottom + Left / Center / Right</span><br><span class="line"># networks:</span><br><span class="line"># Weibo | Wechat | Douban | QQZone | Twitter | Facebook | Linkedin | Mailto | Reddit | Delicious | StumbleUpon | Pinterest</span><br><span class="line"># GooglePlus | Tumblr | GoogleBookmarks | Newsvine | Evernote | Friendfeed | Vkontakte | Odnoklassniki | Mailru</span><br><span class="line">needmoreshare:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    js: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.js</span><br><span class="line">    css: //cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.css</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: true</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  float:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br></pre></td></tr></table></figure><p>Likely</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Likely Share</span><br><span class="line"># See: https://ilyabirman.net/projects/likely/, https://github.com/ilyabirman/Likely</span><br><span class="line"># Likely supports four looks, nine social networks, any button text.</span><br><span class="line"># You are free to modify the text value and order of any network.</span><br><span class="line">likely:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    js: //cdn.jsdelivr.net/npm/ilyabirman-likely@2/release/likely.min.js</span><br><span class="line">    css: //cdn.jsdelivr.net/npm/ilyabirman-likely@2/release/likely.min.css</span><br><span class="line">  look: normal # available values: normal, light, small, big</span><br><span class="line">  networks:</span><br><span class="line">    twitter: Tweet</span><br><span class="line">    facebook: Share</span><br><span class="line">    linkedin: Link</span><br><span class="line">    gplus: Plus</span><br><span class="line">    vkontakte: Share</span><br><span class="line">    odnoklassniki: Class</span><br><span class="line">    telegram: Send</span><br><span class="line">    whatsapp: Send</span><br><span class="line">    pinterest: Pin</span><br></pre></td></tr></table></figure><p>Share.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># share.js</span><br><span class="line"># See: https://github.com/overtrue/share.js</span><br><span class="line"># networks: weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span><br><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  cdn:</span><br><span class="line">    js: //cdn.jsdelivr.net/npm/social-share.js@1/dist/js/social-share.min.js</span><br><span class="line">    css: //cdn.jsdelivr.net/npm/social-share.js@1/dist/js/social-share.min.css</span><br><span class="line">  networks: weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span><br><span class="line">  wechat_qrcode:</span><br><span class="line">    title: share.title</span><br><span class="line">    prompt: share.prompt</span><br></pre></td></tr></table></figure><p>– END –</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SSH密钥进行Git协议传输</title>
      <link href="/posts/3a0aec94.html"/>
      <url>/posts/3a0aec94.html</url>
      
        <content type="html"><![CDATA[<h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p>Git 服务器都会选择使用 SSH 公钥来进行授权。系统中的用户都会提供一个公钥用于授权，没有的话可以生成一个，生成公钥的过程在所有操作系统上都差不多。</p><p>首先，你要确认一下本机是否已经有一个公钥。</p><p>SSH 公钥默认储存在账户的主目录下的 ~/.ssh 目录，进去看看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh &amp;&amp; ls</span><br><span class="line"></span><br><span class="line">id_rsa    id_rsa.pub    known_hosts</span><br></pre></td></tr></table></figure><a id="more"></a><p>看一下有没有id_rsa和id_rsa.pub，有 .pub 后缀的文件就是公钥，另一个文件则是密钥。</p><p>假如没有这些文件，甚至连 .ssh 目录都没有，可以用 ssh-keygen 来创建。</p><p><code>$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code></p><p><u><a href="mailto:your_email@youremail.com" target="_blank" rel="noopener">your_email@youremail.com</a></u> 是你的邮箱，然后一路Enter,完了之后，大概是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your public key has been saved in /home/you/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com</span><br></pre></td></tr></table></figure><h3 id="添加公钥到你的远程仓库"><a href="#添加公钥到你的远程仓库" class="headerlink" title="添加公钥到你的远程仓库"></a>添加公钥到你的远程仓库</h3><p>1、查看你生成的公钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC0X6L1zLL4VHuvGb8aJH3ippTozmReSUzgntvk434aJ/v7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8vR3c8E7CjZN733f5AL8uEYJA+YZevY5UCvEg+umT7PHghKYaJwaCxV7sjYP7Z6V79OMCEAGDNXC26IBMdMgOluQjp6o6j2KAdtRBdCDS/QIU5THQDxJ9lBXjk1fiq9tITo/aXBvjZeD+gH/Apkh/0GbO8VQLiYYmNfqqAHHeXdltORn8N7C9lOa/UW3KM7QdXo6J0GFlBVQeTE/IGqhMS5PMln3 uemail@email.com</span><br></pre></td></tr></table></figure><p>2、登陆你的github帐户。点击你的头像，然后 Settings -&gt; 左栏点击 SSH and GPG keys -&gt; 点击 New SSH key</p><p>3、然后复制上面的公钥内容，粘贴进“Key”文本域内。 title域，自己随便起个名字。</p><p>4、点击 Add key。</p><p>完成以后，验证下这个key是不是正常工作：</p><p><code>$ ssh -T git@github.com</code></p><p>如果，看到：</p><p><code>Hi xxx! You&#39;ve successfully authenticated, but GitHub does not # provide shell access.</code></p><p>恭喜你，你的设置已经成功了。</p><h3 id="修改git的remote-url"><a href="#修改git的remote-url" class="headerlink" title="修改git的remote url"></a>修改git的remote url</h3><p>使用命令 <u>git remote -v</u> 查看你当前的 <u>remote url</u></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin https://github.com/uname/project.git (fetch)</span><br><span class="line">origin https://github.com/uname/project.git (push)</span><br></pre></td></tr></table></figure><p>如果是以上的结果那么说明此项目是使用https协议进行访问的（如果地址是git开头则表示是git协议）</p><p>登陆你的github，打开project，点击Clone or download，你在上面可以看到你的ssh协议相应的url，类似：</p><p><code>git@github.com:uname/project.git</code></p><p>复制此ssh链接，然后使用命令 <u>git remote set-url</u> 来调整你的url。</p><p><code>$ git remote set-url origin git@github.com:uname/project.git</code></p><p>然后，你可以再用命令 <u>git remote -v</u> 查看一下，url是否已经变成了ssh地址。</p><p>最后,使用git fetch, git pull , git push，就再也不用输入密码了。</p>]]></content>
      
      
      <categories>
          
          <category> Linux - git - ssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo页面静态压缩</title>
      <link href="/posts/96ad42a5.html"/>
      <url>/posts/96ad42a5.html</url>
      
        <content type="html"><![CDATA[<p>利用gulp对hexo静态页面进行压缩，提升网页加载速度。</p><h4 id="全局和目录安装gulp"><a href="#全局和目录安装gulp" class="headerlink" title="全局和目录安装gulp"></a>全局和目录安装gulp</h4><p><code>$ npm install gulp -g</code>  //全局安装</p><p><code>$ npm install gulp --save</code>  //站点目录下安装</p><p><code>$ gulp -v</code>  //查看版本</p><h4 id="安装gulp插件"><a href="#安装gulp插件" class="headerlink" title="安装gulp插件"></a>安装gulp插件</h4><a id="more"></a><p>在站点根目录下安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp-minify-css --save</span><br><span class="line">$ npm install gulp-uglify --save</span><br><span class="line">$ npm install gulp-htmlmin --save</span><br><span class="line">$ npm install gulp-htmlclean --save</span><br><span class="line">$ npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure><h4 id="创建gulpfile-js文件"><a href="#创建gulpfile-js文件" class="headerlink" title="创建gulpfile.js文件"></a>创建gulpfile.js文件</h4><p>在 Hexo 站点下新建gulpfile.js文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require(&apos;gulp&apos;);</span><br><span class="line">var minifycss = require(&apos;gulp-minify-css&apos;);</span><br><span class="line">var uglify = require(&apos;gulp-uglify&apos;);</span><br><span class="line">var htmlmin = require(&apos;gulp-htmlmin&apos;);</span><br><span class="line">var htmlclean = require(&apos;gulp-htmlclean&apos;);</span><br><span class="line">var imagemin = require(&apos;gulp-imagemin&apos;);</span><br><span class="line">var babel = require(&apos;gulp-babel&apos;);</span><br><span class="line"></span><br><span class="line">// 压缩css文件</span><br><span class="line">gulp.task(&apos;minify-css&apos;, function (done) &#123;</span><br><span class="line">    return gulp.src(&apos;./public/**/*.css&apos;)</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩html文件</span><br><span class="line">gulp.task(&apos;minify-html&apos;, function (done) &#123;</span><br><span class="line">    return gulp.src(&apos;./public/**/*.html&apos;)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: true,</span><br><span class="line">            minifyJS: true,</span><br><span class="line">            minifyCSS: true,</span><br><span class="line">            minifyURLs: true,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩js文件</span><br><span class="line">gulp.task(&apos;minify-js&apos;, function (done) &#123;</span><br><span class="line">    return gulp.src([&apos;./public/**/*.js&apos;, &apos;!./public/**/*.min.js&apos;])</span><br><span class="line">        .pipe(babel(&#123;</span><br><span class="line">            //将ES6代码转译为可执行的JS代码</span><br><span class="line">            presets: [&apos;es2015&apos;] // es5检查机制</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&apos;./public&apos;));</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 public/images 目录内图片(Version&lt;3)</span><br><span class="line">// gulp.task(&apos;minify-images&apos;, function () &#123;</span><br><span class="line">//     gulp.src(&apos;./public/images/**/*.*&apos;)</span><br><span class="line">//         .pipe(imagemin(&#123;</span><br><span class="line">//             optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）</span><br><span class="line">//             progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片</span><br><span class="line">//             interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染</span><br><span class="line">//             multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化</span><br><span class="line">//         &#125;))</span><br><span class="line">//         .pipe(gulp.dest(&apos;./public/images&apos;));</span><br><span class="line">// &#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 public/images 目录内图片(Version&gt;3)</span><br><span class="line">gulp.task(&apos;minify-images&apos;, function (done) &#123;</span><br><span class="line">    gulp.src(&apos;./public/images/**/*.*&apos;)</span><br><span class="line">        .pipe(imagemin([</span><br><span class="line">            imagemin.gifsicle(&#123;interlaced: true&#125;),</span><br><span class="line">            imagemin.jpegtran(&#123;progressive: true&#125;),</span><br><span class="line">            imagemin.optipng(&#123;optimizationLevel: 5&#125;),</span><br><span class="line">            imagemin.svgo(&#123;</span><br><span class="line">                plugins: [</span><br><span class="line">                    &#123;removeViewBox: true&#125;,</span><br><span class="line">                    &#123;cleanupIDs: false&#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;)</span><br><span class="line">        ]))</span><br><span class="line">        .pipe(gulp.dest(&apos;./public/images&apos;));</span><br><span class="line">    done();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//4.0以前的写法 </span><br><span class="line">//gulp.task(&apos;default&apos;, [</span><br><span class="line">//  &apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;, &apos;minify-images&apos;</span><br><span class="line">//]);</span><br><span class="line">//4.0以后的写法</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(&apos;default&apos;, gulp.series(gulp.parallel(&apos;minify-html&apos;, &apos;minify-css&apos;, &apos;minify-js&apos;, &apos;minify-images&apos;)), function () &#123;</span><br><span class="line">    console.log(&quot;----------gulp Finished----------&quot;);</span><br><span class="line">    // Do something after a, b, and c are finished.</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="gulp-babel-取消严格模式"><a href="#gulp-babel-取消严格模式" class="headerlink" title="gulp-babel 取消严格模式"></a>gulp-babel 取消严格模式</h4><p>首先创建.babelrc文件</p><p>在 Hexo 站点下新建.babelrc文件，文件内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &apos;presets&apos;: [&apos;es2015&apos;],</span><br><span class="line">    &quot;plugins&quot;: [&quot;transform-remove-strict-mode&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后 gulp-babel 取消严格模式(“use strict”)命令：</p><p><code>$ npm install babel-plugin-transform-remove-strict-mode --save</code></p><h4 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h4><p>只需要每次在执行 generate 命令后执行 gulp 就可以实现对静态资源的压缩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ gulp</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>问题1：如果安装gulp-imagemin错误请执行以下命令：</p><p><code>$ npm i gulp-imagemin --unsafe-perms</code></p><p>问题2: gulp 遇到 no gulpfile found</p><p><code>$ npm install gulp -g</code>  //重新全局安装一下gulp，注意gulp一定要先安装全局版本，再安装目录内版本，最好能保持两版本号一致</p><p><code>uname/blog/gulpfile.js</code>  //确定gulpfile.js文件是在hexo目录下</p><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ gulp clean</span><br><span class="line">$ gulp</span><br></pre></td></tr></table></figure><p>– END –</p>]]></content>
      
      
      <categories>
          
          <category> hexo - gulp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下搭建Hexo个人博客</title>
      <link href="/posts/a73fc4c5.html"/>
      <url>/posts/a73fc4c5.html</url>
      
        <content type="html"><![CDATA[<p>本博基于 <u>ubuntu18.04+git v2.17.1+NodeJS v8.10.0+hexo-cli: 2.0.0</u> 不同平台和版本实际操作可能略不同。</p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><h5 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h5><p><code>$ apt install git</code></p><h5 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h5><p><code>$ apt install npm</code></p><h5 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h5><p><code>$ apt install node.js</code></p><a id="more"></a><h5 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h5><p>1：安装hexo</p><p><code>$ npm install -g hexo</code></p><p>2：执行init命令初始化hexo,生成blog文件，就是你的博客根目录，所有的操作都在里面进行。</p><p><code>$ hexo init blog</code></p><p>3：生成静态网页</p><p><code>cd blog</code><br><code>$ hexo g</code></p><p>4：启动本地服务，进行文章预览调试</p><p><code>$ hexo server</code></p><p>浏览器输入 <u><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></u></p><h4 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置GitHub</h4><p>1：建立Repository</p><p>2：建立与你用户名对应的仓库，仓库名必须为【yourname.github.io】，固定写法</p><p>3：建立关联 <code>vi /users/blog/_config.yml</code></p><p>翻到最下面，改成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">    type: git </span><br><span class="line">    repository: https://github.com/yourname/yourname.github.io.git </span><br><span class="line">    #repository: git@github.com:yourname/yourname.github.io.git    //此是针对ssh密钥用户</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>4：执行命令：<code>$ npm install --save hexo-deployer-git</code></p><p>5：然后，执行配置命令：<code>$ hexo deploy</code><br>在浏览器中输入 <u><a href="http://yourname.github.io/" target="_blank" rel="noopener">http://yourname.github.io/</a></u></p><p>6：每次部署命令:</p><p><code>cd blog</code></p><p><code>$ hexo g -d</code></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p><code>hexo new&quot;postname&quot;</code> 新建文章</p><p><code>hexo new page&quot;pagename&quot;</code> 新建页面</p><p><code>hexo clean</code> 清理缓存</p><p><code>hexo generate</code> 生成静态页面</p><p><code>hexo server</code> 开启预览访问端口</p><p><code>hexo deploy</code> 将.deploy目录部署到GitHub</p><p>博客文章在 <u>/blog/source/_posts</u> 文章支持Markdown语法。如果想修改头像可以直接在主题的 <u>_config.yml</u> 文件里面修改，友情链接，之类的都在这里。</p><p>上面的是Linux搭建方法，相信大家用Windows的比较多。推荐朋友的<a href="https://blog.cat73.org/20160608/2016060801.github-hexo/" target="_blank" rel="noopener">Windows搭建教程</a></p><p>– END –</p>]]></content>
      
      
      <categories>
          
          <category> 前端 - hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
